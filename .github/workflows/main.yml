name: Build StreamFX

on:
  workflow_dispatch:
  push:
    branches:
      - '*'
    tags:
      - '*'
  pull_request:
    branches:
      - '*'

concurrency:
  group: build-${{ github.ref_name }}
  cancel-in-progress: true

env:
  CACHE_VERSION: "2022-12-02"

jobs:
  windows:
    strategy:
      fail-fast: false
      matrix:
        runner: [ "windows-2022" ]
        name: [ "Windows" ]
        compiler: [ "MSVC"]
        qt: [ 6 ]
        include:
          - compiler: "MSVC"
            package_name: "windows"
            CMAKE_SYSTEM_VERSION: "10.0.20348.0"
            CMAKE_GENERATOR: "Visual Studio 17 2022"
            CMAKE_GENERATOR_PLATFORM: "x64"
    runs-on: "${{ matrix.runner }}"
    name: "${{ matrix.name }} (${{ matrix.compiler }})"
    env:
      CMAKE_GENERATOR: "${{ matrix.CMAKE_GENERATOR }}"
      CMAKE_GENERATOR_PLATFORM: "${{ matrix.CMAKE_GENERATOR_PLATFORM }}"
      CMAKE_SYSTEM_VERSION: "${{ matrix.CMAKE_SYSTEM_VERSION }}"

    steps:
    - name: "Clone Repository"
      uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0

    - name: "Install Dependencies"
      run: |
        choco install cmake ninja 7zip --no-progress

    - name: "Build zlib"
      run: |
        # Tải zlib
        curl -LO https://zlib.net/zlib131.zip
        # Giải nén zlib
        7z x zlib131.zip -o"zlib-1.3.1"
        ls zlib-1.3.1
        # Tạo thư mục build
        cmake -S zlib-1.3.1 -B build/zlib -G "Ninja" `
          -DCMAKE_BUILD_TYPE=Release `
          -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/build/zlib-install
    
        cmake --build build/zlib --target install


    - name: "Dependency: Prebuilt OBS Studio Dependencies (Cache)"
      id: obsdeps-cache
      uses: actions/cache@v3
      with:
        path: "${{ github.workspace }}/build/obsdeps"
        key: "obsdeps-${{ env.CACHE_VERSION }}"

    - name: "Dependency: Prebuilt OBS Studio Dependencies"
      if: ${{ steps.obsdeps-cache.outputs.cache-hit != 'true' }}
      run: |
        curl --retry 5 --retry-delay 30 -jLo /tmp/obsdeps.zip "${{ env.obs_deps_url }}"
        mkdir -p "${{ github.workspace }}/build/obsdeps"
        7z x -y -o"${{ github.workspace }}/build/obsdeps" /tmp/obsdeps.zip

    - name: "Configure OBS Studio"
      run: |
        cmake -S third-party/obs-studio -B build/obs ^
          -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}/build/obs/install" ^
          -DCMAKE_PREFIX_PATH="${{ github.workspace }}/build/obsdeps;D:/libs/zlib" ^
          -DZLIB_INCLUDE_DIR=D:/libs/zlib/include ^
          -DZLIB_LIBRARY=D:/libs/zlib/lib/zlib.lib ^
          -DENABLE_PLUGINS=OFF ^
          -DENABLE_UI=OFF ^
          -DENABLE_SCRIPTING=OFF

    - name: "Build OBS Studio"
      run: |
        cmake --build build/obs --config RelWithDebInfo --target obs-frontend-api

    - name: "Install OBS Studio"
      run: |
        cmake --install build/obs --config RelWithDebInfo --component obs_libraries

    - name: "Upload Build Artifacts"
      uses: actions/upload-artifact@v3
      with:
        name: "${{ matrix.runner }}-${{ matrix.compiler }}"
        path: build/package
